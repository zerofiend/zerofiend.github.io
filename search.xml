<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【汇编语言】二进制的原码、反码和补码</title>
      <link href="/post/6d0400f9.html"/>
      <url>/post/6d0400f9.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这篇文章用来汇总我学习汇编语言时遇到的有符号数的二进制原码。反码和补码的知识。</p><h2 id="机器字（machine-word）长"><a href="#机器字（machine-word）长" class="headerlink" title="机器字（machine word）长"></a>机器字（machine word）长</h2><ul><li>一般指计算机进行一次整数运算能处理的二进制数据的位数，通常也包括数据地址长度。</li><li>32位字长<ul><li>地址的表示空间是4GB</li><li>对很多内存需求大的应用而言，非常有限</li></ul></li><li>64位字长<ul><li>地址表示空间约是1.8 * 10^19 bytes</li><li>目前的 x86-64 机型实际支持48位宽的地址：256TB</li></ul></li></ul><h2 id="原码、反码和补码"><a href="#原码、反码和补码" class="headerlink" title="原码、反码和补码"></a>原码、反码和补码</h2><p>无符号数不存在原码、反码和补码，无符号数直接将数字化成二进制数储存在对应的储存器或者寄存器中，如果是8位的，则表示的范围是0~255，详情见上文。</p><h3 id="原码"><a href="#原码" class="headerlink" title="原码"></a>原码</h3><p>原码是将最高位作为符号位（0表示正，1表示负），其余数字表示数值本身的绝对值数字表示方式。</p><h3 id="反码"><a href="#反码" class="headerlink" title="反码"></a>反码</h3><p>如果是正数则表示方法和原码一样，如果是负数，符号位不变，其余各位取反，则得到这个数字的反码表示形式。</p><h3 id="补码"><a href="#补码" class="headerlink" title="补码"></a>补码</h3><p>如果是正数，则表示方法和原码一样，如果是负数，则将数字的反码加上1。</p><p>在计算机中普遍采用补码来作为数据存储，因为它能直接进行加和减的运算。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 汇编语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成原理学习笔记</title>
      <link href="/post/980e11ce.html"/>
      <url>/post/980e11ce.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>2023.3.9</strong></p><p>这一篇博客用来记录我观看哈工大的计算机组成原理课程时的学习笔记以及自我理解。</p><hr><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><blockquote class="pullquote mindmap mindmap-md"><ul><li>课程的分割整合<ul><li>机器<ul><li>计算机系统的基本概念</li><li>总线</li><li>储存器</li></ul></li><li>数字<ul><li>计算机中数的表示</li><li>计算机的运算方法和运算器</li></ul></li><li>CPU<ul><li>指令系统</li><li>CPU的结构和功能</li><li>控制单元</li><li>控制单元的设计</li></ul></li></ul></li></ul></blockquote><h1 id="第一章-计算机系统概论"><a href="#第一章-计算机系统概论" class="headerlink" title="第一章 计算机系统概论"></a>第一章 计算机系统概论</h1><p>Q: 现代计算机由哪两部分构成？<br>A: 现代计算机由硬件系统和软件系统构成。</p><h2 id="1-1-计算机系统简介"><a href="#1-1-计算机系统简介" class="headerlink" title="1.1 计算机系统简介"></a>1.1 计算机系统简介</h2><h3 id="一、计算机的软硬件概念"><a href="#一、计算机的软硬件概念" class="headerlink" title="一、计算机的软硬件概念"></a>一、计算机的软硬件概念</h3><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  graph LR    A(计算机系统)    B(硬件)    C(软件)        A -- &quot;计算机的实体，如主机、外设等&quot; --&gt; B    A -- &quot;由具有各类特殊功能的信息（程序）组成&quot; --&gt; C    C --&gt; D(系统软件)    C --&gt; E(应用软件)    D --&gt; D1(&quot;语言处理程序&quot;)    D --&gt; D2(&quot;操作系统&quot;)    D --&gt; D3(&quot;服务型程序&quot;)    D --&gt; D4(&quot;数据库管理系统&quot;)    D --&gt; D5(&quot;网络软件&quot;)  </pre></div><h3 id="二、计算机系统的层次结构"><a href="#二、计算机系统的层次结构" class="headerlink" title="二、计算机系统的层次结构"></a>二、计算机系统的层次结构</h3><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  graph TD    a1(高级语言)    a2(汇编语言)    a3(操作系统)    a4(机器语言)    a5(微指令系统)    b1(&quot;虚拟机器 M3&quot;)    b2(&quot;虚拟机器 M2&quot;)    b3(&quot;虚拟机器&quot;)    b4(&quot;实际机器 M1&quot;)    b5(&quot;微程序机器 M0&quot;)    c1(&quot;用编译程序翻译成汇编语言程序&quot;)    c2(&quot;用汇编语言程序翻译成机器语言程序&quot;)    c3(&quot;用机器语言解释操作系统&quot;)    c4(&quot;用微指令解释机器指令&quot;)    c5(&quot;由硬件直接执行微指令&quot;)    subgraph 软件        a1 --&gt; a2        a2 --&gt; a3        b1 --&gt; b2        b2 --&gt; b3        c1 --&gt; c2        c2 --&gt; c3    end    subgraph 硬件        a3 --&gt; a4        a4 --&gt; a5        b3 --&gt; b4        b4 --&gt; b5        c3 --&gt; c4        c4 --&gt; c5    end  </pre></div><h3 id="三、计算机体系结构和计算机组成"><a href="#三、计算机体系结构和计算机组成" class="headerlink" title="三、计算机体系结构和计算机组成"></a>三、计算机体系结构和计算机组成</h3><p><strong>计算机体系结构</strong></p><p>程序员所见到的计算机系统的属性，概念性的结构与功能特性</p><p>（指令系统、数据类型、寻址技术、I&#x2F;O机理）</p><p><strong>计算机组成</strong></p><p>实现计算机体系结构所体现的属性</p><p>（具体指令的实现）</p><h2 id="1-2-计算机的基本组成"><a href="#1-2-计算机的基本组成" class="headerlink" title="1.2 计算机的基本组成"></a>1.2 计算机的基本组成</h2><h3 id="一、冯诺依曼计算机的特点"><a href="#一、冯诺依曼计算机的特点" class="headerlink" title="一、冯诺依曼计算机的特点"></a>一、冯诺依曼计算机的特点</h3><ol><li>计算机由五大部件组成</li><li>指令和数据以同等地位存于储存器，可按地址寻访</li><li>指令和数据用二进制表示</li><li>指令由操作码和地址码组成</li><li>存储程序</li><li>以运算器为中心</li></ol><p>冯诺依曼计算机硬件框图</p><p><img src="/images/1678356519276.png" alt="1678356519276"></p><h3 id="二、计算机硬件框图"><a href="#二、计算机硬件框图" class="headerlink" title="二、计算机硬件框图"></a>二、计算机硬件框图</h3><ol><li>以储存器为中心的计算机硬件框图<br><img src="/images/1678356782939.png" alt="1678356782939"></li><li>现代计算机硬件框图<br><img src="/images/1678356856065.png" alt="1678356856065"></li></ol><p>系统复杂性管理的方法（3’Y）<br>– 层次化（Hierachy）：将被设计的系统划分为多个模块或子模块<br>– 模块化（Modularity）：有明确定义（well-defined）的功能和接口<br>– 规则性（regularity）：模块更容易被重用</p><h3 id="三、计算机的工作步骤"><a href="#三、计算机的工作步骤" class="headerlink" title="三、计算机的工作步骤"></a>三、计算机的工作步骤</h3><h4 id="1-储存器的基本组成"><a href="#1-储存器的基本组成" class="headerlink" title="1.储存器的基本组成"></a>1.储存器的基本组成</h4><p><img src="/images/1678357166561.png" alt="1678357166561"><br>存储单元：存放一串二进制代码<br>存储字：存储单元中二进制代码的组合<br>存储字长：存储单元中二进制代码的位数，每个存储单元赋予一个地址号<br><strong>按地址寻访</strong></p><p>MAR：存储器<strong>地址</strong>寄存器反映存储单元的个数<br>MDR：存储器<strong>数据</strong>寄存器反映存储字长</p><h4 id="2-运算器的基本组成及操作过程"><a href="#2-运算器的基本组成及操作过程" class="headerlink" title="2.运算器的基本组成及操作过程"></a>2.运算器的基本组成及操作过程</h4><p><img src="/images/1678359840066.png" alt="1678359840066"></p><p>ACC：累加器<br>MQ：存储</p><h4 id="3-控制器的基本组成"><a href="#3-控制器的基本组成" class="headerlink" title="3.控制器的基本组成"></a>3.控制器的基本组成</h4><p><img src="/images/1678361330647.png" alt="1678361330647"></p><blockquote class="pullquote mindmap mindmap-md"><ul><li>完成一条指令<ul><li>1.取指令（PC）</li><li>2.分析指令（IR）</li><li>3.执行指令（CU）</li></ul></li></ul></blockquote><p>PC（计数器）：存放当前将要执行的指令，具有计数功能<br>IR（指令寄存器）：存放当前将要执行的指令<br>CU（控制单元）：执行指令</p><h4 id="4-主机完成一条指令的过程"><a href="#4-主机完成一条指令的过程" class="headerlink" title="4.主机完成一条指令的过程"></a>4.主机完成一条指令的过程</h4><p>以取数指令为例</p><p><img src="/images/1678361886511.png" alt="1678361886511"></p><p>以存数指令为例</p><p><img src="/images/1678361936879.png" alt="1678361936879"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 编程 </tag>
            
            <tag> 计算机组成原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编程学习路线汇总</title>
      <link href="/post/a9ef46dc.html"/>
      <url>/post/a9ef46dc.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这是我通过查找各种资料而总结的编程学习路线，旨在帮助自己有方向有目的的快速学习计算机编程，成为一名优秀的计算机行业的从业人员，具体如下图所示：</p><p><img src="/images/learnroadmap.png"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 编程 </tag>
            
            <tag> 汇总 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客搭建日记</title>
      <link href="/post/4a17b156.html"/>
      <url>/post/4a17b156.html</url>
      
        <content type="html"><![CDATA[<h1 id="个人博客搭建日记"><a href="#个人博客搭建日记" class="headerlink" title="个人博客搭建日记"></a>个人博客搭建日记</h1><p>这一篇用于记录我搭建这个博客项目的过程以及之后的改进内容。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
